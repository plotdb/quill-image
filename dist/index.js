// Generated by LiveScript 1.6.0
var BlockEmbed, imagePlusBlot, ref$;
BlockEmbed = Quill['import']('blots/block/embed');
imagePlusBlot = function(){
  return Reflect.construct(BlockEmbed, arguments, imagePlusBlot);
};
imagePlusBlot.prototype = Object.create(BlockEmbed.prototype);
imagePlusBlot.prototype.constructor = imagePlusBlot;
Object.setPrototypeOf(imagePlusBlot, BlockEmbed);
ref$ = import$(imagePlusBlot, BlockEmbed);
ref$.blotName = 'image-plus';
ref$.tagName = 'img';
ref$.create = function(v){
  var node;
  node = BlockEmbed.create.call(this, v);
  node.setAttribute('src', v.src);
  node.setAttribute('alt', v.alt) || '';
  if (v.width) {
    node.setAttribute('width', v.width);
  }
  if (v.height) {
    node.setAttribute('height', v.height);
  }
  return node;
};
ref$.value = function(n){
  return ['src', 'alt', 'width', 'height'].map(function(t){
    return [t, n.getAttribute(t)];
  });
};
Quill.register(imagePlusBlot);
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}
