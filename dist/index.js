// Generated by LiveScript 1.6.0
var BlockEmbed, imagePlusBlot, resizer, ref$;
BlockEmbed = Quill['import']('blots/block/embed');
imagePlusBlot = function(){
  return Reflect.construct(BlockEmbed, arguments, imagePlusBlot);
};
imagePlusBlot.prototype = Object.create(BlockEmbed.prototype);
imagePlusBlot.prototype.constructor = imagePlusBlot;
Object.setPrototypeOf(imagePlusBlot, BlockEmbed);
resizer = function(){
  var this$ = this;
  this._ = {
    dom: {}
  };
  this._.dom.base = document.createElement('div');
  import$(this._.dom, Object.fromEntries(['n', 'e', 's', 'w'].map(function(t){
    var n;
    n = document.createElement('div');
    this$._.dom.base.appendChild(n);
    n.classList.add('quill-image-plus-resizer-bar', "quill-image-plus-resizer-bar-" + (t === 'n' || t === 's' ? 'horizontal' : 'vertical'));
    return [t, n];
  })));
  import$(this._.dom, Object.fromEntries(['nw', 'ne', 'se', 'sw'].map(function(t){
    var n;
    n = document.createElement('div');
    this$._.dom.base.appendChild(n);
    n.classList.add('quill-image-plus-resizer-dot');
    return [t, n];
  })));
  return this;
};
resizer.prototype = (ref$ = Object.create(Object.prototype), ref$.init = function(){}, ref$);
ref$ = import$(imagePlusBlot, BlockEmbed);
ref$.blotName = 'image-plus';
ref$.tagName = 'img';
ref$.create = function(v){
  var node;
  if (!imagePlusBlot.resizer) {
    imagePlusBlot.resizer = new resizer();
  }
  node = BlockEmbed.create.call(this, v);
  node.setAttribute('src', v.src);
  node.setAttribute('alt', v.alt) || '';
  if (v.width) {
    node.setAttribute('width', v.width);
  }
  if (v.height) {
    node.setAttribute('height', v.height);
  }
  return node;
};
ref$.value = function(n){
  return ['src', 'alt', 'width', 'height'].map(function(t){
    return [t, n.getAttribute(t)];
  });
};
Quill.register(imagePlusBlot);
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}
